---

# Add and remove could be pulled together if iterated over a nested dict list / fine for now
# Add apt package logic
- name: Write keys into /etc/apt/keyrings/
  ansible.builtin.get_url:
    url: "{{ item.key }}"
    dest: "/etc/apt/keyrings/{{ item.repo_filename }}"
    mode: '0755'
  loop: "{{ apt_packages_present }}"
  when: (item.key is defined) and (item.key != "")

- name: Add apt repository for the package
  ansible.builtin.apt_repository:
    repo: "{{ item.repo_url }}"
    filename: "{{ item.repo_filename }}"
    state: present
    update_cache: false
  loop: "{{ apt_packages_present }}"
  when: (item.repo_url is defined) and (item.repo_url != "")

- name: Update apt cache
  ansible.builtin.apt:
    update_cache: true

- name: Install apt packages
  ansible.builtin.apt:
    name: "{{ item.name }}"
    state: present
    update_cache: false
  loop: "{{ apt_packages_present }}"
  when: (item.name is defined) and (item.name != "") and (item.deb_path is undefined)

- name: Install deb packages
  ansible.builtin.apt:
    deb: "{{ item.deb_path }}"
    state: present
    update_cache: false
  loop: "{{ apt_packages_present }}"
  when: (item.deb_path is defined) and (item.deb_path != "")

# Remove apt package logic
- name: Remove apt packages
  ansible.builtin.apt:
    name: "{{ item.name }}"
    state: absent
    update_cache: true
  loop: "{{ apt_packages_absent }}"
  when: (item.name is defined) and (item.name != "")

- name: Remove apt repository for the package
  ansible.builtin.apt_repository:
    repo: "{{ item.repo_url }}"
    filename: "{{ item.repo_filename }}"
    state: absent
  loop: "{{ apt_packages_absent }}"
  when: (item.repo_url is defined) and (item.repo_url != "")

# flatpak / flathub
- name: Add the flathub flatpak repository remote
  community.general.flatpak_remote:
    name: flathub
    state: present
    flatpakrepo_url: https://flathub.org/repo/flathub.flatpakrepo

- name: Install flatpak apps
  community.general.flatpak:
    name: "{{ item.name }}"
    state: present
    remote: flathub
  loop: "{{ flathub_packages_present }}"
  when: (item.name is defined) and (item.name != "")

- name: Remove flatpack apps
  community.general.flatpak:
    name: "{{ item.name }}"
    state: absent
  loop: "{{ flathub_packages_absent }}"
  when: (item.name is defined) and (item.name != "")

# VMware Workstation
- name: Download VMware Workstation Install binary, there is no flatpack or deb/apt release
  ansible.builtin.get_url:
    url: https://www.vmware.com/go/getworkstation-linux
    dest: /usr/local/sbin/
    mode: -rwxr-xr-x

# to install this package: $ sudo . /usr/local/sbin/<actual-vmware-binary>
# could be automated via register results - get binary name / call with "--deferred-gtk" option
